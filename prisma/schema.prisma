// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Jenjang {
  SMP
  SMA
}

enum Kelas {
  VII
  VIII
  IX
  X
  XI
  XII
}

enum Role {
  USER
  JURI
  ADMIN
}

enum Posisi {
  OFFICIAL
  DANTON
  b1s1
  b1s2
  b1s3
  b2s1
  b2s2
  b2s3
  b3s1
  b3s2
  b3s3
  b4s1
  b4s2
  b4s3
  b5s1
  b5s2
  b5s3
}

model User {
  id          String       @id @default(uuid())
  nama        String
  email       String       @unique
  password    String
  role        Role
  penilaian   Penilaian?
  pembayarans Pembayaran[]
}

model Anggota {
  id     String  @id @default(uuid())
  nama   String
  email  String  @unique
  telp   String
  foto   String
  posisi Posisi
  nisn   String?
  kelas  Kelas
  Tim    Tim     @relation(fields: [timId], references: [id], onDelete: Cascade)
  timId  String
}

model Penilaian {
  id         String    @id @default(uuid())
  created_at DateTime? @default(now())
  updated_at DateTime  @updatedAt
  user       User      @relation(references: [id], fields: [user_id], onDelete: Cascade)
  user_id    String    @unique
  tim        Tim       @relation(fields: [tim_id], references: [id])
  tim_id     String    @unique
  published  Boolean   @default(false)
}

model Tim {
  id         String      @id @default(uuid())
  nama_tim   String
  updated_at DateTime    @updatedAt
  penilaian  Penilaian[]
  pelatih    String
  anggotas   Anggota[]
  jenjang    Jenjang
  pembayaran Pembayaran?
  confirmed  Boolean     @default(false)
}

model Pembayaran {
  id       String @id @default(uuid())
  user     User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id  String @unique
  tim      Tim    @relation(fields: [tim_id], references: [id], onDelete: Cascade)
  tim_id   String @unique
  bukti_tf String
  bank     String
  nama_rek String
}
