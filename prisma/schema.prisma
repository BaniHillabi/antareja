// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Jenjang {
  SMP
  SMA
}

enum Kelas {
  VII
  VIII
  IX
  X
  XI
  XII
}

enum Role {
  USER
  ADMIN
}

enum Tipe {
  SMALL
  NORMAL
}

enum Posisi {
  OFFICIAL
  DANTON
  B1S1
  B1S2
  B1S3
  B2S1
  B2S2
  B2S3
  B3S1
  B3S2
  B3S3
  B4S1
  B4S2
  B4S3
  B5S1
  B5S2
  B5S3
}

model User {
  id        String      @id @default(uuid())
  nama      String
  email     String      @unique
  password  String
  role      Role
  penilaian Penilaian[]
  tim       Tim?
  token     String?
  verified  Boolean     @default(false)
}

model Anggota {
  id     String  @id @default(uuid())
  nama   String
  email  String  @unique
  telp   String
  foto   String
  posisi Posisi
  nisn   String?
  kelas  Kelas
  Tim    Tim     @relation(fields: [timId], references: [id], onDelete: Cascade)
  timId  String

  @@unique([posisi, timId])
}

model Penilaian {
  id           String    @id @default(uuid())
  created_at   DateTime? @default(now())
  updated_at   DateTime  @updatedAt
  user         User      @relation(references: [id], fields: [user_id], onDelete: Cascade)
  user_id      String
  tim          Tim       @relation(fields: [tim_id], references: [id])
  tim_id       String    @unique
  published    Boolean   @default(false)
  pbb          Int
  variasi      Int
  formasi      Int
  danpas       Int
  pasukan      Int
  pbb_tambahan Int
  detail_url   String
  note         String
}

model Tim {
  id           String      @id @default(uuid())
  nama_tim     String
  asal_sekolah String
  updated_at   DateTime    @updatedAt
  penilaian    Penilaian?
  pelatih      String
  anggotas     Anggota[]
  jenjang      Jenjang
  pembayaran   Pembayaran?
  tipe_tim     Tipe
  confirmed    Boolean     @default(false)
  user         User        @relation(fields: [userId], references: [id])
  userId       String      @unique
  foto_mascot  String?
}

model Pembayaran {
  id       String @id @default(uuid())
  tim      Tim    @relation(fields: [tim_id], references: [id], onDelete: Cascade)
  tim_id   String @unique
  bukti_tf String
  bank     String
  nama_rek String
}

model Pengumuman {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  content   String
}
